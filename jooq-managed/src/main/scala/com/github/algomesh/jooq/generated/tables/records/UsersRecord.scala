/*
 * This file is generated by jOOQ.
 */
package com.github.algomesh.jooq.generated.tables.records


import com.github.algomesh.jooq.generated.tables.Users

import java.lang.Boolean
import java.lang.String
import java.time.LocalDate
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
class UsersRecord extends UpdatableRecordImpl[UsersRecord](Users.USERS) {

  /**
   * Setter for <code>USERS.ID</code>.
   */
  def setId(value: UUID): Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>USERS.ID</code>.
   */
  def getId: UUID = get(0).asInstanceOf[UUID]

  /**
   * Setter for <code>USERS.EMAIL</code>.
   */
  def setEmail(value: String): Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>USERS.EMAIL</code>.
   */
  def getEmail: String = get(1).asInstanceOf[String]

  /**
   * Setter for <code>USERS.FIRST_NAME</code>.
   */
  def setFirstName(value: String): Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>USERS.FIRST_NAME</code>.
   */
  def getFirstName: String = get(2).asInstanceOf[String]

  /**
   * Setter for <code>USERS.LAST_NAME</code>.
   */
  def setLastName(value: String): Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>USERS.LAST_NAME</code>.
   */
  def getLastName: String = get(3).asInstanceOf[String]

  /**
   * Setter for <code>USERS.DOB</code>.
   */
  def setDob(value: LocalDate): Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>USERS.DOB</code>.
   */
  def getDob: LocalDate = get(4).asInstanceOf[LocalDate]

  /**
   * Setter for <code>USERS.CREATED_DATE</code>.
   */
  def setCreatedDate(value: LocalDate): Unit = {
    set(5, value)
  }

  /**
   * Getter for <code>USERS.CREATED_DATE</code>.
   */
  def getCreatedDate: LocalDate = get(5).asInstanceOf[LocalDate]

  /**
   * Setter for <code>USERS.IS_ENABLED</code>.
   */
  def setIsEnabled(value: Boolean): Unit = {
    set(6, value)
  }

  /**
   * Getter for <code>USERS.IS_ENABLED</code>.
   */
  def getIsEnabled: Boolean = get(6).asInstanceOf[Boolean]

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  override def key: Record1[UUID] = super.key.asInstanceOf[ Record1[UUID] ]

  /**
   * Create a detached, initialised UsersRecord
   */
  def this(id : UUID, email : String, firstName : String, lastName : String, dob : LocalDate, createdDate : LocalDate, isEnabled : Boolean) = {
    this()

    this.setId(id)
    this.setEmail(email)
    this.setFirstName(firstName)
    this.setLastName(lastName)
    this.setDob(dob)
    this.setCreatedDate(createdDate)
    this.setIsEnabled(isEnabled)
    resetChangedOnNotNull()
  }
}
